show:
  title: "Debugging After Dark: The Recursive Noir"
  logline: "In the rain-slicked digital streets of CodeCity, Detective Trace must unravel the mysteries of a complex recursive writing system before deadline dawn breaks. When documents go missing and context gets lost in the shadows, only methodical debugging can illuminate the truth."

  characters:
    - name: "Detective Trace"
      description: |
        Our hard-boiled protagonist, a veteran debugger who's seen it all. With a keen eye for detail and a methodical approach, Trace specializes in untangling the most complex system architectures. Chain-smokes breakpoints and drinks black coffee straight from the terminal.

    - name: "The Client (Voice)"
      description: "A desperate product manager whose deadline looms at dawn. Never seen on screen, only heard through phone calls and voice messages."

    - name: "WriteHERE (The System)"
      description: |
        A sophisticated recursive task planning and execution framework that generates documents. Visualized as a sprawling, art-deco cityscape of interconnected buildings and alleyways, each structure representing a component of the system.

    - name: "The Suspects (System Components)"
      description: |
        The key components of WriteHERE, each with their own motives and behaviors. Any one of them could be causing the system's mysterious failures.
      list:
        - name: "The Planner"
          role: "UpdateAtomPlanningAgent - Breaks down tasks into subtasks. A meticulous architect with blueprints and schematics."

        - name: "The Executor"
          role: "SimpleExecutor - Performs the actual writing and thinking. A tireless worker with ink-stained hands."

        - name: "The Aggregator"
          role: "FinalAggregateAgent - Synthesizes results. A puzzle-master constantly assembling pieces."

        - name: "The Memory"
          role: "The system's shared repository. An old archivist surrounded by filing cabinets and scrolls."

        - name: "The Graph"
          role: "The structure connecting all tasks. A shadowy figure who controls the flow of information."

  arc:
    - act: 1
      title: "The Case: A System in Shadows"
      scenes:
        - scene_number: "1.1"
          title: "The Office (Night)"
          summary: "Detective Trace receives a desperate call about a failing document generation system."
          shots:
            - shot_number: "1.1.1"
              visual: "Rain streaks down a grimy window. Inside, a dimly lit office with multiple monitors displaying code and error logs. DETECTIVE TRACE sits at the desk, staring at the screens."
              audio: |
                (Sound of rain and distant thunder)

                **Client (Phone):** "Trace? I need your help. Our WriteHERE system... it's producing gibberish. Documents with missing sections, repeated paragraphs. We have a major deadline at dawn."

                **Trace (VO):** "Another recursive system gone haywire. They build these labyrinthine architectures and wonder why they can't find their way out."

            - shot_number: "1.1.2"
              visual: "Trace pulls up a visualization of the WriteHERE system architecture - a complex graph of interconnected nodes glowing against a dark background."
              audio: |
                **Trace:** "Tell me about the system."

                **Client:** "It's called WriteHERE. Breaks down complex writing tasks into manageable subtasks. Uses LLMs to plan, execute, and synthesize. Worked perfectly in testing, but in production..."

                **Trace:** "They always work in testing. I'll need access to the source."

                (Sound of keyboard clicking)

        - scene_number: "1.2"
          title: "First Look at the Architecture"
          summary: "Trace examines the system's architecture and identifies the key components."
          shots:
            - shot_number: "1.2.1"
              visual: "A holographic display shows the WriteHERE architecture as a cityscape. Buildings of different sizes represent different components, connected by glowing pathways."
              audio: |
                **Trace (VO):** "WriteHERE. Not just another simple LLM wrapper. This one's got ambition - a recursive engine, breaking down writing tasks like a master chef prepping ingredients."

                (Sound of files opening, digital interface beeps)

            - shot_number: "1.2.2"
              visual: "Trace zooms in on different buildings in the cityscape, highlighting them one by one as he describes them."
              audio: |
                **Trace (VO):** "The node system - representing tasks as nodes in a graph. The agent system - specialized modules performing actions. The memory system - tracking the growing document. And the execution flow - the heartbeat of the whole operation."

                (Sound of digital interface as each component is highlighted)

                **Trace:** "Five major players, and one of them isn't telling the truth."

    - act: 2
      title: "The Investigation: Setting the Traps"
      scenes:
        - scene_number: "2.1"
          title: "Setting Up the Breakpoints"
          summary: "Trace sets up strategic breakpoints to monitor the system's behavior."
          shots:
            - shot_number: "2.1.1"
              visual: "Trace's fingers glide across the keyboard, placing red markers at strategic points in the code. Each marker glows and pulses gently."
              audio: |
                **Trace (VO):** "In this business, you learn to set traps where the culprits least expect it. Strategic breakpoints - little digital tripwires that catch the system in the act."

                (Sound of keyboard typing, occasional 'ping' as breakpoints are set)

            - shot_number: "2.1.2"
              visual: "A closeup of code on the screen with a breakpoint being placed at 'engine.py:report_writing' line ~540."
              audio: |
                **Trace:** "First, I need to see how this story begins. The root node creation - where the whole narrative is born."

                (Sound of a digital 'click' as the breakpoint is set)

            - shot_number: "2.1.3"
              visual: "A sequence of more breakpoints being set at critical points in the code: the main loop, state transitions, agent selection, and task planning."
              audio: |
                **Trace (VO):** "The main loop - heartbeat of the system. State transitions - where decisions are made. Agent selection - who does what. Task planning - breaking down the story. Each one a potential scene of the crime."

                (Sound of multiple digital 'clicks' in succession)

        - scene_number: "2.2"
          title: "Launching the Debug Session"
          summary: "Trace launches the debug session and begins monitoring the system's execution."
          shots:
            - shot_number: "2.2.1"
              visual: "Trace clicks 'Start Debugging'. The screen fills with scrolling logs and data. The office lights dim further as the monitors glow brighter."
              audio: |
                **Trace:** "Let's see what you're hiding."

                (Sound of a system starting up, fans whirring)

            - shot_number: "2.2.2"
              visual: "The first breakpoint hits. Code execution freezes, highlighting the root node creation."
              audio: |
                **Trace (VO):** "First stop - root node creation. Every story needs a beginning."

                (Sound of a sharp 'ding' as execution pauses)

                **Trace:** "So it's a question-answering task. Interesting."

    - act: 3
      title: "The Investigation: Following the Execution Trail"
      scenes:
        - scene_number: "3.1"
          title: "The Planning Process"
          summary: "Trace observes how WriteHERE plans and decomposes tasks."
          shots:
            - shot_number: "3.1.1"
              visual: "The cityscape visualizes a large building (the root node) spawning smaller structures (subtasks). Blueprints and schematics float between them."
              audio: |
                **Trace (VO):** "The Planner at work. Breaking down the writing task into manageable pieces. Setting up dependencies, creating a roadmap."

                (Sound of mechanical drawing tools, blueprint paper unrolling)

            - shot_number: "3.1.2"
              visual: "Closeup of the Planner (visualized as an architect) drawing up detailed plans. LLM prompt and response data stream between the Planner and a cloud-like structure above."
              audio: |
                **Trace:** "The prompts are the instructions. The LLM is the creative consultant. Together they decide how to approach the writing task."

                (Sound of pencil on paper)

                **Trace (VO):** "But something's not right with this plan. The structure seems sound, but there's a shadow in the details."

            - shot_number: "3.1.3"
              visual: "The plan transforms into a graph structure. Nodes appear, connected by directional edges. Some edges glow brighter than others."
              audio: |
                **Trace (VO):** "Plan to graph conversion. This is where abstract ideas become executable tasks. A critical juncture where mistakes can cascade."

                (Sound of digital construction, building elements clicking into place)

        - scene_number: "3.2"
          title: "Task Execution - The Workers at Their Stations"
          summary: "Trace follows the execution of individual tasks and how they contribute to the document."
          shots:
            - shot_number: "3.2.1"
              visual: "Various workers (representing execution nodes) in different parts of the cityscape, each working on their assigned tasks. Some are writing, others researching, others thinking."
              audio: |
                **Trace (VO):** "The workers. Each with their own specialty. Writers, researchers, thinkers. All following the plan, contributing their piece to the puzzle."

                (Sound of multiple typewriters, pages turning, pencils scratching)

            - shot_number: "3.2.2"
              visual: "Closeup of an execution node hitting a breakpoint. Data about context, memory, and the prompt being constructed is displayed."
              audio: |
                **Trace:** "So that's the context you're working with. Let's see what you're missing."

                (Sound of execution pausing)

                **Trace (VO):** "Context is everything in this business. Miss a key detail from a dependency, and your whole narrative falls apart."

        - scene_number: "3.3"
          title: "Memory System - The Archives"
          summary: "Trace investigates the memory system and how information flows between nodes."
          shots:
            - shot_number: "3.3.1"
              visual: "The Memory visualized as a vast archive room. Filing cabinets open and close automatically as information is stored and retrieved. Some cabinets are dusty and forgotten."
              audio: |
                **Trace (VO):** "The Memory. Keeper of context, tracker of progress. Without it, each worker would be isolated, unaware of what others have done."

                (Sound of filing cabinets opening and closing, papers shuffling)

            - shot_number: "3.3.2"
              visual: "Trace examines a highlighted cabinet labeled 'node.hashkey'. It contains scattered, incomplete information."
              audio: |
                **Trace:** "Well, well, well. What do we have here? A memory leak. Or rather, a memory gap."

                (Sound of cabinet drawer squeaking open)

                **Trace (VO):** "Some context isn't being properly stored. The workers are operating on incomplete information."

    - act: 4
      title: "The Twist: Uncovering the Real Culprit"
      scenes:
        - scene_number: "4.1"
          title: "The Graph Structure - Following the Dependencies"
          summary: "Trace discovers an issue with how task dependencies are tracked and resolved."
          shots:
            - shot_number: "4.1.1"
              visual: "The Graph visualized as a network of glowing paths between buildings. Some paths are disrupted or missing, creating disconnected islands."
              audio: |
                **Trace (VO):** "The Graph. The roadmap that ensures tasks are done in the right order. Dependency tracking is its primary job."

                (Sound of electricity humming along the paths)

            - shot_number: "4.1.2"
              visual: "Trace traces a particular dependency path with his finger. The path flickers and dims at certain points."
              audio: |
                **Trace:** "There it is. Circular dependencies. Tasks waiting for each other to complete. A perfect deadlock."

                (Sound of electrical shorting, path flickering)

        - scene_number: "4.2"
          title: "State Transitions - The Decision Points"
          summary: "Trace examines how nodes transition between states and discovers a logical flaw."
          shots:
            - shot_number: "4.2.1"
              visual: "A node visualization showing different states as colored chambers. A token (representing the node's current state) moves between chambers as conditions are evaluated."
              audio: |
                **Trace (VO):** "State transitions. The decision points that determine what happens next. NOT_READY, READY, DOING, DONE... a elaborate dance of conditions and consequences."

                (Sound of mechanical clicking as the token moves between states)

            - shot_number: "4.2.2"
              visual: "The token gets stuck between two states, vibrating but unable to move forward."
              audio: |
                **Trace:** "And there's our smoking gun. A condition that can never be satisfied. The perfect trap."

                (Sound of mechanism trying but failing to advance)

                **Trace (VO):** "A logical flaw in the state transition rules. Some nodes can never complete because they're waiting for a condition that will never be true."

    - act: 5
      title: "Resolution: Fixing the System"
      scenes:
        - scene_number: "5.1"
          title: "Modifying the Code"
          summary: "Trace implements fixes for the identified issues."
          shots:
            - shot_number: "5.1.1"
              visual: "Trace typing rapidly, making precise changes to the code. Each modification causes ripples in the cityscape visualization, repairing broken connections."
              audio: |
                **Trace (VO):** "Surgery time. Precise incisions, careful modifications. Fix the circular dependencies. Update the state transition logic. Ensure proper context sharing."

                (Sound of intense keyboard typing)

            - shot_number: "5.1.2"
              visual: "Closeup of specific code changes being made to fix the circular dependency issue."
              audio: |
                **Trace:** "First, the dependency validation. Add a cycle detection algorithm here..."

                (Sound of focused typing)

                **Trace (VO):** "No system is perfect, but they can be made to work. Just need to understand their quirks, their habits, their dark little secrets."

        - scene_number: "5.2"
          title: "Running the Fixed System"
          summary: "Trace runs the system again and verifies that the issues are resolved."
          shots:
            - shot_number: "5.2.1"
              visual: "Trace launches the fixed system. The cityscape comes alive, now functioning smoothly with all connections properly maintained."
              audio: |
                **Trace:** "Let's see if you can behave now."

                (Sound of system starting up, more harmonious than before)

            - shot_number: "5.2.2"
              visual: "The document being generated piece by piece, sections appearing and integrating smoothly."
              audio: |
                **Trace (VO):** "The true art of debugging isn't just finding what's broken. It's understanding why it broke, and ensuring it doesn't break again."

                (Sound of pages being printed, assembling into a complete document)

        - scene_number: "5.3"
          title: "Case Closed"
          summary: "Trace wraps up the case and reflects on the lessons learned."
          shots:
            - shot_number: "5.3.1"
              visual: "The office again. Sunrise beginning to peek through the window. Rain has stopped. Trace leans back in his chair, looking satisfied."
              audio: |
                **Client (Phone):** "Trace, the system's working perfectly now! The document is complete and it actually makes sense. How did you do it?"

                **Trace:** "Three issues: circular dependencies in your task graph, flawed state transition logic, and incomplete context sharing between nodes. Fixed now."

                **Client:** "You're a miracle worker, Trace."

            - shot_number: "5.3.2"
              visual: "Trace shuts down the debugging session. Stands up and looks out at the brightening city skyline."
              audio: |
                **Trace (VO):** "Another case closed. In the end, it's always about connections - dependencies, transitions, context. Just like the mean streets of CodeCity, everything and everyone is connected."

                (Sound of system shutting down)

                **Trace (VO):** "Until the next bug rears its ugly head, this detective is signing off."

                (Jazzy noir music rises and fades)

  key_concepts:
    - name: "Recursive Task Decomposition"
      details: "The process of breaking down complex writing tasks into hierarchical subtasks, enabling LLMs to tackle complex document creation more effectively than with simple prompts."

    - name: "Task Graph"
      details: "A directed acyclic graph (DAG) structure where nodes represent tasks and edges represent dependencies, ensuring proper execution order."

    - name: "State Machine"
      details: "System where tasks progress through defined states (NOT_READY, READY, DOING, etc.) based on conditions, controlling the execution flow."

    - name: "Agent System"
      details: "Specialized modules that perform specific actions: planning (decomposing tasks), execution (generating content), and aggregation (synthesizing results)."

    - name: "Memory System"
      details: "A shared repository that tracks document progress and provides context between tasks, ensuring coherent output."

    - name: "Strategic Breakpoints"
      details: "Carefully placed debugging points that reveal system behavior at critical junctures, essential for understanding complex recursive systems."

    - name: "Context Management"
      details: "How information flows between tasks, ensuring each has the necessary input from dependencies to produce coherent output."
